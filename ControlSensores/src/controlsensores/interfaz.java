/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package controlsensores;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonSyntaxException;
import com.google.gson.reflect.TypeToken;
import java.io.BufferedReader;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.Writer;
import java.nio.file.Files;
import java.nio.file.Paths;
import javax.swing.DefaultComboBoxModel;
import java.util.stream.Collectors;

/**
 *
 * @author u1401
 */
public class interfaz extends javax.swing.JFrame {

    /**
     * Creates new form interfaz
     */
    ArrayList<Sensor> _sensores;
    ArrayList<String> _nomSensor;
    String _path;
    public interfaz() {
        initComponents();
        _nomSensor= new ArrayList<>(); 
        _path=System.getProperty("user.dir")+"\\src\\controlsensores\\";
        cargarSensor();     
    }

    void cargarSensor(){  
        try{
            

         String Json= new String(Files.readAllBytes(Paths.get("sensores.JSON")));
//         String Json = getResourceFileAsString("sensores.JSON");
          Gson gson = new Gson();   
         if(!Json.trim().equals(""))
         {     
          java.lang.reflect.Type tipo = new TypeToken<ArrayList<Sensor>>(){}.getType();
         _sensores  = gson.fromJson(Json, tipo);
         _sensores.forEach((se) -> {
             _nomSensor.add(se.getNombre());
             });
         cb_sensor.setModel(new DefaultComboBoxModel(_nomSensor.toArray()));
         jTextArea1.setText(_sensores.get(0).getDescripcion());
         }
         else _sensores = new ArrayList<>();
        }
        catch(IOException e) {
            System.err.println("JsonSyntaxException: " + e.getMessage());
        }
    }
    
    public String getResourceFileAsString(String resourceFileName) {
    InputStream is = getClass().getResourceAsStream(resourceFileName);
    BufferedReader reader = new BufferedReader(new InputStreamReader(is));
    return reader.lines().collect(Collectors.joining("\n"));
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cb_sensor = new javax.swing.JComboBox<>();
        lb_sensor = new javax.swing.JLabel();
        tb_power = new javax.swing.JToggleButton();
        lb_status = new javax.swing.JLabel();
        bt_dlt = new javax.swing.JButton();
        bt_add = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        cb_sensor.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cb_sensorItemStateChanged(evt);
            }
        });

        lb_sensor.setText("sensor");

        tb_power.setIcon(new javax.swing.ImageIcon(getClass().getResource("/controlsensores/icons/off.png"))); // NOI18N
        tb_power.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tb_powerActionPerformed(evt);
            }
        });

        lb_status.setIcon(new javax.swing.ImageIcon(getClass().getResource("/controlsensores/icons/ledred.png"))); // NOI18N
        lb_status.setText("off");

        bt_dlt.setText("eliminar");
        bt_dlt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_dltActionPerformed(evt);
            }
        });

        bt_add.setText("agregar");
        bt_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_addActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setMaximumSize(new java.awt.Dimension(164, 94));
        jTextArea1.setMinimumSize(new java.awt.Dimension(164, 94));
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(lb_sensor)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cb_sensor, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(lb_status)
                                .addGap(18, 18, 18)
                                .addComponent(tb_power, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bt_add)
                    .addComponent(bt_dlt))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cb_sensor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lb_sensor))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bt_add)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bt_dlt))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tb_power, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lb_status))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tb_powerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tb_powerActionPerformed
        // TODO add your handling code here:
        if(tb_power.isSelected()){
            tb_power.setIcon(new ImageIcon(getClass().getResource("/controlsensores/icons/on.png")));
            lb_status.setIcon(new ImageIcon(getClass().getResource("/controlsensores/icons/ledgreen.png")));
            lb_status.setText("on");
            cambiarStatus(true);
            
        }
        else{
              tb_power.setIcon(new ImageIcon(getClass().getResource("/controlsensores/icons/off.png")));
               lb_status.setIcon(new ImageIcon(getClass().getResource("/controlsensores/icons/ledred.png")));
                lb_status.setText("off");
               cambiarStatus(false);
        }
    }//GEN-LAST:event_tb_powerActionPerformed
    
    private void cambiarStatus(boolean status){
        getSensorByName(cb_sensor.getSelectedItem().toString()).setStatus(status);  
        guardarJson();       
    }
    private void bt_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_addActionPerformed
        // TODO add your handling code here:
        AgregarSensor winsensor = new AgregarSensor(this,true) ;
        winsensor.setSensores(_sensores);
        winsensor.setVisible(true);
        _nomSensor.clear();
        _sensores.forEach((se) -> {    
            _nomSensor.add(se.getNombre());
        });
        guardarJson();
        cb_sensor.setModel(new DefaultComboBoxModel(_nomSensor.toArray()));
    }//GEN-LAST:event_bt_addActionPerformed

    private void bt_dltActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_dltActionPerformed
        // TODO add your handling code here:
        _nomSensor.clear();
        _sensores.remove(getSensorByName(cb_sensor.getSelectedItem().toString()));
        _sensores.forEach((se) -> {    
            _nomSensor.add(se.getNombre());
        });
        guardarJson();
        cb_sensor.setModel(new DefaultComboBoxModel(_nomSensor.toArray()));
        if(!_sensores.isEmpty())jTextArea1.setText(_sensores.get(0).getDescripcion());
    }//GEN-LAST:event_bt_dltActionPerformed

    private Sensor getSensorByName(String name){
            for(int i=0; i<_sensores.size();i++){
            if(cb_sensor.getSelectedItem().toString() == null ? _sensores.get(i).getNombre() == null : cb_sensor.getSelectedItem().toString().equals(_sensores.get(i).getNombre()))return _sensores.get(i);
        } 
            return null;
    }
    private void cb_sensorItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cb_sensorItemStateChanged
        // TODO add your handling code here:
        Sensor se =getSensorByName(cb_sensor.getSelectedItem().toString());
        jTextArea1.setText(se.getDescripcion());
         if(se.getStatus()){
            tb_power.setIcon(new ImageIcon(getClass().getResource("/controlsensores/icons/on.png")));
            lb_status.setIcon(new ImageIcon(getClass().getResource("/controlsensores/icons/ledgreen.png")));
            lb_status.setText("on");           
        }
        else{
              tb_power.setIcon(new ImageIcon(getClass().getResource("/controlsensores/icons/off.png")));
               lb_status.setIcon(new ImageIcon(getClass().getResource("/controlsensores/icons/ledred.png")));
                lb_status.setText("off");
        }       
    }//GEN-LAST:event_cb_sensorItemStateChanged
     void guardarJson(){

//          try(Writer writer =  new OutputStreamWriter(new FileOutputStream(getClass().getResource("sensores.JSON").getPath()),"UTF-8"))
            try(Writer writer =  new OutputStreamWriter(new FileOutputStream("sensores.JSON"),"UTF-8"))
        {        
           Gson gson = new GsonBuilder().setPrettyPrinting().create();
           gson.toJson(_sensores,writer);
           writer.close();
        } catch (Exception e) {
        }

      
     }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new interfaz().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_add;
    private javax.swing.JButton bt_dlt;
    private javax.swing.JComboBox<String> cb_sensor;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel lb_sensor;
    private javax.swing.JLabel lb_status;
    private javax.swing.JToggleButton tb_power;
    // End of variables declaration//GEN-END:variables
}
